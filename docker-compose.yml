version: '3'

services:
    php:
        container_name: $DOCKER_COMPOSE_PROJECT_NAME-php
        build:
            context: ./.docker/php
            dockerfile: Dockerfile
        env_file:
            - .env.local
        volumes:
            - .:/app
        working_dir: /app
        environment:
            - PHP_IDE_CONFIG=serverName=${REQUEST_HOST:-localhost}
        depends_on:
            - database
        networks:
            - network
        extra_hosts:
            - "host.docker.internal:host-gateway"

    nginx:
        container_name: $DOCKER_COMPOSE_PROJECT_NAME-nginx
        image: nginx
        env_file:
            - .env.local
        volumes:
            - .:/app
            - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./.docker/nginx/templates:/etc/nginx/templates:ro
        ports:
            - "80:80"
        environment:
            - NGINX_SERVER_NAME=${REQUEST_HOST:-localhost}
            - NGINX_PORT=80
        networks:
            - network
        depends_on:
            - php

###> doctrine/doctrine-bundle ###
    database:
        container_name: $DOCKER_COMPOSE_PROJECT_NAME-postgres
        image: postgres:${POSTGRES_VERSION:-15}-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB:-app}
            # You should definitely change the password in production
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
            POSTGRES_USER: ${POSTGRES_USER:-app}
        ports:
            - 65432:5432
        volumes:
#            - database_data:/var/lib/postgresql/data:rw
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
             - ./.docker/db/data:/var/lib/postgresql/data:rw
        networks:
            - network
###< doctrine/doctrine-bundle ###

#volumes:
    ###> doctrine/doctrine-bundle ###
#    database_data:
###< doctrine/doctrine-bundle ###

networks:
    network:
